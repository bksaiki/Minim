;
;   Additional syntax handling
;

(def-values (identifier?)
  (lambda (t)
    (if (syntax? t)
        (symbol? (unwrap t))
        #f)))

(def-values (stx-pair?)
  (lambda (t)
    (if (pair? t)
        #t
        (if (syntax? t)
            (pair? (unwrap t))
            #f))))

(def-values (stx-list?)
  (lambda (t)
    (if (list? t)
        #t
        (if (syntax? t)
            (list? (unwrap t))
            #f))))

(def-values (stx-null?)
  (lambda (t)
    (if (null? t)
        #t
        (if (syntax? t)
            (null? (unwrap t))
            #f))))

(def-values (stx-car)
  (lambda (t)
    (if (pair? t)
        (car t)
        (car (unwrap t)))))

(def-values (stx-cdr)
  (lambda (t)
    (if (pair? t)
        (cdr t)
        (cdr (unwrap t)))))

(def-values (stx-vector?)
  (lambda (t)
    (if (vector? t)
        #t
        (if (syntax? t)
            (vector? (unwrap t))
            #f))))
            

(%export identifier? stx-pair? stx-list? stx-null?
         stx-car stx-cdr
         stx-vector?)
