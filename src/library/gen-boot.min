;;;
;;;  Makes the boot file for the interpreter
;;;  

(import "base.min" "module.min")


;;
;;  Metadata
;;

(define boot-info
  '(("private/list.min")
    ("private/path.min")
    ("private/generics.min")
    ("private/record.min")
    ("private/set.min")
    ("private/string.min")
    ("private/stx.min")
    ("expander.min")
    ("module.min")
    ("read.min")))

;;
;;  module processing
;;

(define (->absolute-path fname)
  (if (is-absolute-path? fname)
      fname
      (build-path (current-directory) fname)))

(define (module-definitions exprs)
  (define ((_-form? form-name) expr)
    (and (stx-pair? expr)
          (let ([head (stx-car expr)])
            (and (identifier? head)
                (eq? (syntax-e head) form-name)))))
  (define define-values-form? (_-form? 'define-values))
  (map (lambda (stx)
         (define expr (syntax->datum stx))
         (cons (first (second expr)) expr))
       (filter (lambda (stx) (define-values-form? stx))
               exprs)))

(define (write-module-definitions path exclude boot-file)
  (define-values (exprs xforms imports exports _ _) (read/module path))
  (define all-defs (module-definitions exprs))
  (for-each (lambda (entry)
              (define name (car entry))
              (define def (cdr entry))
              (unless (member name exclude)
                (write def boot-file)
                (newline boot-file)))
            all-defs))

;;
;;  entry point
;;

(define (main args)
  (unless (= (length args) 3)
    (error 'gen-boot.min "USAGE: minim gen-boot.min <BASEDIR> <OUTFILE>")
    (exit 1))
  
  (define base (second args))
  (define fname (third args))

  (printf "Generating boot file at ~a\n" fname)
  (printf "Standard library at ~a\n" base)

  (define boot-file (open-output-file (->absolute-path fname)))
  (define lib-base (->absolute-path base))

  (for-each (lambda (info)
              (define path (build-path lib-base (car info)))
              (define exclude (cdr info))
              (write-module-definitions path exclude boot-file))
            boot-info)
  (close-output-port boot-file))

(main (command-line))
