;;;
;;; Additional syntax handling
;;;

(export identifier? free-identifier=?
        stx-null? stx-pair? stx-list?
        stx-car stx-cdr)

(define-values (identifier?)
  (lambda (t)
    (if (syntax? t)
        (symbol? (syntax-e t))
        #f)))

;; TODO: this clearly should not be here
(define-values (free-identifier=?)
  (lambda (a b)
    (if (not (identifier? a))
        (error 'free-identifier=? "expected identifier?" a)
        (if (not (identifier? b))
            (error 'free-identifier=? "expected identifier?" b)
            (eq? (syntax-e a) (syntax-e b))))))

(define-values (stx-null?)
  (lambda (t)
    (if (null? t)
        #t
        (if (syntax? t)
            (null? (syntax-e t))
            #f))))

(define-values (stx-pair?)
  (lambda (t)
    (if (pair? t)
        #t
        (if (syntax? t)
            (pair? (syntax-e t))
            #f))))

(define-values (stx-car)
  (lambda (t)
    (if (pair? t)
        (car t)
        (car (syntax-e t)))))

(define-values (stx-cdr)
  (lambda (t)
    (if (pair? t)
        (cdr t)
        (cdr (syntax-e t)))))

(define-values (stx-list?)
  (lambda (t)
    (if (list? t)
        #t
        (if (syntax? t)
            (list? (syntax-e t))
            #f))))
