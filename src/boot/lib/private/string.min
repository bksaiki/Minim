;;
;;  Strings
;;

(import "pre-base.min")
(export substring)

(define (substring str start end)
  (define len (string-length str))
  (cond
    [(not (string? str)) (error 'substring "expected string? for" str)]
    [(not (number? start)) (error 'substring "expected number? for" start)]
    [(not (number? end)) (error 'substring "expected number? for" end)]
    [(> end len) (error 'substring "index out of bounds" end)]
    [(> start end) (error 'substring "invalid bounds" start end)]
    [(= start end) ""]
    [else
     (define sstr (make-string (- end start)))
     (let loop ([i 0] [n start])
       (cond
         [(= n end) sstr]
         [else
          (string-set! sstr i (string-ref str n))
          (loop (+ i 1) (+ n 1))]))]))
