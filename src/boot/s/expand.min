;;;
;;;   Minim boot library for the bootstrap interpreter
;;;   Brett Saiki
;;;

;;;
;;;   Expander for syntax macros
;;;   

(define $xforms '())

(define (expand expr)
  ;; looks up a transform returning #f if none is found
  (define (lookup-or-false key)
    (let loop ([xforms $xforms])
      (cond [(null? xforms) #f]
            [(eq? (caar xforms) key) (cdar xforms)]
            [else (loop (cdr xforms))])))

  ;; expression-level expander
  (define (expand-expr expr)
    (define expr* (syntax-e expr))
    (cond
      [(pair? expr*)
       (define first (syntax-e (car expr*)))
       (define maybe-args (cdr expr*))
       (cond
         [(symbol? first)
          (define maybe-xform (lookup-or-false first))
          (if maybe-xform
              (datum->syntax (expand-expr (maybe-xform expr)))
              (datum->syntax (cons (datum->syntax first) (map expand-expr maybe-args))))]
         [else
          (datum->syntax (map expand-expr expr*))])]
      [else
       expr]))

  (expand-expr expr))
