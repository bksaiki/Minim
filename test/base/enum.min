;;;
;;; Tests for 'set'
;;;

(import "../../src/library/base.min")

(define num-failed 0)

(define (check-equal? d0 d1)
  (unless (equal? d0 d1)
    (display "[FAIL] expected ")
    (write d1)
    (display ", received ")
    (write d0)
    (newline)
    (set! num-failed (+ num-failed 1))))

(define (check-true d)
  (unless d
    (display "[FAIL] expected #t")
    (display ", received ")
    (write d)
    (newline)
    (set! num-failed (+ num-failed 1))))

(define (check-false d)
  (when d
    (display "[FAIL] expected #f")
    (display ", received ")
    (write d)
    (newline)
    (set! num-failed (+ num-failed 1))))

; Test `make-enumeration` and `enum-set?`
(let ()
  (define e1 (make-enumeration '()))
  (define e2 (make-enumeration '(a)))
  (define e3 (make-enumeration '(a b c)))

  (check-true (enum-set-type? e1))
  (check-true (enum-set-type? e2))
  (check-true (enum-set-type? e3))

  (void))


(when (> num-failed 0)
  (error #f "test failed"))
