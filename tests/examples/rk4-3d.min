;
; Name: Runge-Kutta 4
; Cite: FPBench https://github.com/FPBench/FPBench/blob/2bb5a7cd8c41b0c01948b5c7e8a3eca94cb93da0/tests/tensor/rk4-3d.fpcore
;

(def vec-scale (V s)
  (list (* s (list-ref V 0))
        (* s (list-ref V 1))
        (* s (list-ref V 2))))

; unsafe (should check |A| == |B|)
(def vec-add (A B)
  (list (+ (list-ref A 0) (list-ref B 0))
        (+ (list-ref A 1) (list-ref B 1))
        (+ (list-ref A 2) (list-ref B 2))))

(def lorenz-3d (V)
  (let ([sigma 10]
        [beta 8/3]
        [rho 28]
        [x (list-ref V 0)]
        [y (list-ref V 1)]
        [z (list-ref V 2)])
    (list (* sigma (- y z))
          (- (* x (- rho z)) y)
          (- (* x y) (* beta z)))))

(def forward-euler-3d (V h)
  (let* ([k1 (vec-scale (lorenz-3d V) h)])
    (vec-add V k1)))

(def midpoint-3d (V h)
  (let* ([k1 (vec-scale (lorenz-3d V) h)]
         [k2 (vec-scale (lorenz-3d (vec-add V (vec-scale k1 1/2))) h)])
    (vec-add V k2)))

(def ralston-3d (V h)
  (let* ([k1 (vec-scale (lorenz-3d V) h)]
         [k2 (vec-scale (lorenz-3d (vec-add V (vec-scale k1 2/3))) h)])
    (for/list ([i (in-range 3)])
      (+ (list-ref V i)
          (* 1/4 (+ (list-ref k1 i)
                    (* 3 (list-ref k2 i))))))))

(def rk4-3d (V h)
  (let* ([k1 (vec-scale (lorenz-3d V) h)]
         [k2 (vec-scale (lorenz-3d (vec-add V (vec-scale k1 1/2))) h)]
         [k3 (vec-scale (lorenz-3d (vec-add V (vec-scale k2 1/2))) h)]
         [k4 (vec-scale (lorenz-3d (vec-add V k3)) h)])
    (for/list ([i (in-range 3)])
      (+ (list-ref V i)
         (* 1/6 (+ (list-ref k1 i)
                   (* 2 (list-ref k2 i))
                   (* 2 (list-ref k3 i))
                   (list-ref k4 i)))))))

(def main (iters)
  (def v0 (list 1.0 1.0 1.0))
  (def step 0.02)
  (printf "Running 3D rk4:\n")
  (printf " x0: <~a, ~a, ~a>\n" (list-ref v0 0) (list-ref v0 1) (list-ref v0 2))
  (printf " step: ~a\n" step)
  (printf " iters: ~a\n" iters)
  (let loop ([v v0] [iters iters])
    (if (zero? iters)
        v
        (loop (rk4-3d v step) (- iters 1)))))

(main 5)
(main 25)
(main 125)
(main 625)
