;; Tests for <lib>/private/case.min

;; case
(equal? (case "a") (void))
(equal? (case 5 [(5) #t]) #t)
(equal? (case 5 [(4) #t]) (void))
(equal? (case 5 [(1 3 5) 'odd] [(2 4 6) 'even]) 'odd)
(equal? (case 4 [(1 3 5) 'odd] [(2 4 6) 'even]) 'even)

;; case lambda
; (def foo
;   (case-lambda
;    [(a) (vector 1 (list a))]
;    [(a b) (vector 2 (list a b))]
;    [(a b c) (vector 3 (list a b c))]
;    [(a b c . rest) (vector '? (list a b c rest))]))

; (equal? (foo 'a) '#(1 (a)))
; (equal? (foo 'a 'b) '#(2 (a b)))
; (equal? (foo 'a 'b 'c) '#(3 (a b c)))
; (equal? (foo 'a 'b 'c 'd) '#(? (a b c (d))))
